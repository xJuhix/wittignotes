{"ast":null,"code":"var _jsxFileName = \"/Users/juhis/Desktop/WittigNotes_React/wittignotes/client/src/components/article/ProductivityArticles.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport { PRODUCTIVY_URL } from '../../constants/api';\nimport ArticleItem from './ArticleItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProductivityArticles() {\n  _s();\n\n  const [articles, setProductivityArticles] = useState([]);\n  const url = PRODUCTIVY_URL;\n  const [hasError, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Getting the articles from API\n\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(json => {\n      setProductivityArticles(json);\n    }).catch(error => {\n      setError(true);\n    }).finally(() => setLoading(false));\n  }, [url]);\n\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      className: \"erroralert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"spinner\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"row__cards\",\n      children: articles.map(productivity => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(ArticleItem, {\n          id: productivity.id,\n          date_: productivity.acf.date_,\n          author_: productivity.acf.author_,\n          category_: productivity.acf.category_,\n          title: productivity.title.rendered,\n          excerpt: productivity.excerpt.rendered,\n          image_: productivity.acf.image_.url,\n          readtime_: productivity.acf.readtime_\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, productivity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProductivityArticles, \"E8QBI5D3qUH4K3jrIuW04522SRw=\");\n\n_c = ProductivityArticles;\nexport default ProductivityArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductivityArticles\");","map":{"version":3,"sources":["/Users/juhis/Desktop/WittigNotes_React/wittignotes/client/src/components/article/ProductivityArticles.js"],"names":["React","useState","useEffect","Row","Col","Spinner","Alert","PRODUCTIVY_URL","ArticleItem","ProductivityArticles","articles","setProductivityArticles","url","hasError","setError","loading","setLoading","fetch","then","response","json","catch","error","finally","map","productivity","id","acf","date_","author_","category_","title","rendered","excerpt","image_","readtime_"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,oBAAT,GAAgC;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,uBAAX,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMW,GAAG,GAAGL,cAAZ;AACA,QAAM,CAACM,QAAD,EAAWC,QAAX,IAAuBb,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC,CAJ8B,CAM9B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAACL,GAAD,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdT,MAAAA,uBAAuB,CAACS,IAAD,CAAvB;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAPH,EAQGS,OARH,CAQW,MAAMP,UAAU,CAAC,KAAD,CAR3B;AASD,GAVQ,EAUN,CAACJ,GAAD,CAVM,CAAT;;AAYA,MAAIC,QAAJ,EAAc;AACZ,wBAAO,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIE,OAAJ,EAAa;AACX,wBACE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGL,QAAQ,CAACc,GAAT,CAAcC,YAAD,iBACZ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,EAAE,EAAEA,YAAY,CAACC,EADnB;AAEE,UAAA,KAAK,EAAED,YAAY,CAACE,GAAb,CAAiBC,KAF1B;AAGE,UAAA,OAAO,EAAEH,YAAY,CAACE,GAAb,CAAiBE,OAH5B;AAIE,UAAA,SAAS,EAAEJ,YAAY,CAACE,GAAb,CAAiBG,SAJ9B;AAKE,UAAA,KAAK,EAAEL,YAAY,CAACM,KAAb,CAAmBC,QAL5B;AAME,UAAA,OAAO,EAAEP,YAAY,CAACQ,OAAb,CAAqBD,QANhC;AAOE,UAAA,MAAM,EAAEP,YAAY,CAACE,GAAb,CAAiBO,MAAjB,CAAwBtB,GAPlC;AAQE,UAAA,SAAS,EAAEa,YAAY,CAACE,GAAb,CAAiBQ;AAR9B;AAAA;AAAA;AAAA;AAAA;AADF,SAAsCV,YAAY,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD;;GApDQjB,oB;;KAAAA,oB;AAsDT,eAAeA,oBAAf","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\nimport { PRODUCTIVY_URL } from '../../constants/api';\nimport ArticleItem from './ArticleItem';\n\nfunction ProductivityArticles() {\n  const [articles, setProductivityArticles] = useState([]);\n  const url = PRODUCTIVY_URL;\n  const [hasError, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Getting the articles from API\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => {\n        setProductivityArticles(json);\n      })\n      .catch((error) => {\n        setError(true);\n      })\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  if (hasError) {\n    return <Alert variant=\"warning\" className=\"erroralert\" />;\n  }\n  if (loading) {\n    return (\n      <Spinner\n        animation=\"border\"\n        className=\"spinner\"\n        variant=\"info\"\n      />\n    );\n  }\n\n  return (\n    <>\n      <Row className=\"row__cards\">\n        {articles.map((productivity) => (\n          <Col sm={6} md={6} lg={4} xl={3} key={productivity.id}>\n            <ArticleItem\n              id={productivity.id}\n              date_={productivity.acf.date_}\n              author_={productivity.acf.author_}\n              category_={productivity.acf.category_}\n              title={productivity.title.rendered}\n              excerpt={productivity.excerpt.rendered}\n              image_={productivity.acf.image_.url}\n              readtime_={productivity.acf.readtime_}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default ProductivityArticles;\n"]},"metadata":{},"sourceType":"module"}